---
# DbAnalyzer receives AnalyzerRequest and responds with AnalyzerResponse
# Two required fields in AnalyzerRequest are dtype (type of the request)
# and connection (of the ConnectionParams type).
#
# DbAnalyzer can also return error the same in the form of
# { status: ..., erroromessage: ... } structure.
#
# Response for different values of dtype parameter:
# switch dtype {
#   Test: return {} in case of successfull connection
#   DatabaseInfo:
#     return  AnalyzerRssponse {
#               dtype: DatabaseInfo
#               dbInfo: { ... } (the important field is "schemas",
#                                each schema contains a list of table names)
#             }
#   TableInfo:
#     request information about the particular table.
#     AnalyzerRequest should contain tableInfo field, which is
#                     schema, table and a list of PIIDetectors defined for
#                     this customer
#     return AnalyzeResponse {
#               dtype: TableInfo
#               tblInfo: { ... } (where the important field is "columns",
#                                 each column has, in addition to name and
#                                 type, "semantics" field (which is the id
#                                 of the PIIDetector, or null), and
#                                 "possibleActions")
#             }
# }

module: DbAnalyzer

ConnectionDetailRequest:
  - connectionId: string

ConnectionDetailResponse:
  - status: string
  - errormessage: string
  - response: ?AnalyzerResponse

DataType:
  - Test
  - DatabaseInfo
  - TableInfo

AnalyzerRequest:
  - dtype: DataType
  - connection: ConnectionParams
  - tableInfo: ?TableInfoParams  # requiered when crtype == TableInfo

TableInfoParams:
  - schema: string
  - table: string
  - rules: <| Common.PIIDetector |>

AnalyzerResponse:
  - dtype: DataType
  - dbInfo: ?DatabaseInfoData
  - tblInfo: ?TableInfoData

DatabaseInfoData:
  - dbName: string
  - schemas: <| schema |>

TableInfoData:
  - dbName: string
  - schema: string
  - tblName: string
  - columns: <| column |>

ConnectionParams:
  - typ: Common.ConnectionType
  - address: string
  - port: int
  - user: string
  - password: string
  - database: string
  - tls: bool

schema:
  - name: string
  - isSystem: bool
  - tables: <| table |>

table:
  - name: string
  - isSystem: bool

column:
  - name: string
  - position: int
  - typ: string
  - isNullable: bool
  - default: ?string
  - reference: ?Common.reference
  - semantics: ?string  # id from Common.PIIDetector
  - possibleActions: <| Common.DataHandling |>

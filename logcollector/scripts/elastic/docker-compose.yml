version: "2.2"

services:
  setup:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    depends_on:
      es:
        condition: service_healthy
    container_name: es-setup.dymium.local
    networks:
      - dymium
    volumes:
      - ./:/usr/share/setup
    command: >
      bash -c '
      echo "Adding pipeline";
      until curl -s -X PUT -H "Content-Type: application/json" http://elasticsearch.dymium.local:9200/_ingest/pipeline/jsonmessage -d 
      @/usr/share/setup/pipeline.json | grep -q "acknowledged"; do sleep 10; done;
      '
  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    volumes:
      - $HOME/docker/volumes/dymium/elastic/certs:/usr/share/elasticsearch/config/certs
      - $HOME/docker/volumes/dymium/elastic/esdata01:/usr/share/elasticsearch/data
    ports:
      - ${ES_PORT}:9200
    container_name: elasticsearch.dymium.local
    environment:
      - node.name=es
      - cluster.name=${CLUSTER_NAME}
      - cluster.initial_master_nodes=es
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
    mem_limit: ${MEM_LIMIT}
    networks:
      - dymium
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s http://localhost:9200",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  kibana:
    depends_on:
      es:
        condition: service_healthy
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    volumes:
      - $HOME/docker/volumes/dymium/elastic/certs:/usr/share/kibana/config/certs
      - $HOME/docker/volumes/dymium/elastic/kibanadata:/usr/share/kibana/data
    ports:
      - ${KIBANA_PORT}:5601
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=http://elasticsearch.dymium.local:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
    mem_limit: ${MEM_LIMIT}
    container_name: kibana.dymium.local
    networks:
      - dymium
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

networks:
  dymium:
    name: dymium
    external: true

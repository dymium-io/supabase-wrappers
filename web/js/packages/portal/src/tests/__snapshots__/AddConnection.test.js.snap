// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`add-connection 1`] = `
<div
  className=" text-left"
>
  <h5>
     Connect to New Data Source 
    <img
      className="hiddenspinner"
      src="/logo.png"
      style={
        Object {
          "width": "28px",
        }
      }
    />
  </h5>
  <div
    className=" text-left"
  >
    <form
      className=""
      noValidate={true}
      onSubmit={[Function]}
    >
      <div
        className="fade alert alert-danger alert-dismissible show"
        role="alert"
      >
        <button
          className="close"
          onClick={[Function]}
          type="button"
        >
          <span
            aria-hidden="true"
          >
            Ã—
          </span>
          <span
            className="sr-only"
          >
            Close alert
          </span>
        </button>
        Error retrieving access key: 
        Unhandled request: /api/getconnectors
         
      </div>
      <div
        className="row"
      >
        <div
          className="col-auto"
        >
          <div
            className="mb-3 form-group"
          >
            <label
              className="form-label"
              htmlFor="dbtype"
            >
              Database type
            </label>
            <select
              className="form-control form-control-sm"
              id="dbtype"
              onChange={[Function]}
              required={true}
              value=""
            >
              <option
                value=""
              >
                ...
              </option>
              <option
                value="PostgreSQL"
              >
                PostgreSQL
              </option>
              <option
                value="MySQL"
              >
                MySQL
              </option>
              <option
                value="MariaDB"
              >
                MariaDB
              </option>
              <option
                value="SqlServer"
              >
                SQL Server
              </option>
              <option
                value="OracleDB"
              >
                Oracle DB
              </option>
            </select>
            <div
              className="valid-feedback"
            >
              Looks good!
            </div>
            <div
              className="invalid-feedback"
            >
              Select DB type
            </div>
          </div>
        </div>
        <div
          className="col-auto"
        >
          <div
            className="mb-3 form-group"
          >
            <label
              className="form-label"
              htmlFor="dname"
            >
              <div
                className=""
              >
                <div
                  className=" text-wrap"
                  onClick={[Function]}
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                >
                  Dymium
                   
                  <span
                    className="text-nowrap"
                  >
                    name
                    <i
                      className="ml-1 blue fas fa-question-circle text-newinfo"
                    />
                    :
                  </span>
                </div>
              </div>
            </label>
            <input
              className="form-control form-control-sm"
              id="dname"
              onChange={[Function]}
              pattern="[a-z0-9_]+"
              placeholder="alpha_num, small caps"
              required={true}
              type="text"
              value=""
            />
            <div
              className="valid-feedback"
            >
              Looks good!
            </div>
            <div
              className="invalid-feedback"
            >
              Type systemwide unique name to use in SQL
            </div>
          </div>
        </div>
        <div
          className="col-auto"
        >
          <div
            className="mb-3 form-group"
          >
            <label
              className="form-label"
              htmlFor="dbname"
            >
              <div
                className=""
              >
                <div
                  className=" text-wrap"
                  onClick={[Function]}
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                >
                  Database
                   
                  <span
                    className="text-nowrap"
                  >
                    name
                    <i
                      className="ml-1 blue fas fa-question-circle text-newinfo"
                    />
                    :
                  </span>
                </div>
              </div>
            </label>
            <input
              className="form-control form-control-sm"
              id="dbname"
              onChange={[Function]}
              pattern=".+"
              placeholder="Alpha_Num"
              required={true}
              type="text"
              value=""
            />
            <div
              className="valid-feedback"
            >
              Looks good!
            </div>
            <div
              className="invalid-feedback"
            >
              Type systemwide unique name to use in SQL
            </div>
          </div>
        </div>
      </div>
      <div
        className="row"
      >
        <div
          className="mt-1 col"
          style={
            Object {
              "paddingLeft": "1.5em",
            }
          }
        >
          <div
            className="react-toggle yellowtoggle"
            onClick={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
          >
            <div
              className="react-toggle-track"
            >
              <div
                className="react-toggle-track-check"
              >
                <svg
                  height="11"
                  viewBox="0 0 14 11"
                  width="14"
                >
                  <path
                    d="M11.264 0L5.26 6.004 2.103 2.847 0 4.95l5.26 5.26 8.108-8.107L11.264 0"
                    fill="#fff"
                    fillRule="evenodd"
                  />
                </svg>
              </div>
              <div
                className="react-toggle-track-x"
              >
                <svg
                  height="10"
                  viewBox="0 0 10 10"
                  width="10"
                >
                  <path
                    d="M9.9 2.12L7.78 0 4.95 2.828 2.12 0 0 2.12l2.83 2.83L0 7.776 2.123 9.9 4.95 7.07 7.78 9.9 9.9 7.776 7.072 4.95 9.9 2.12"
                    fill="#fff"
                    fillRule="evenodd"
                  />
                </svg>
              </div>
            </div>
            <div
              className="react-toggle-thumb"
            />
            <input
              checked={false}
              className="react-toggle-screenreader-only"
              id="conn-status"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              type="checkbox"
            />
          </div>
          <label
            className="form-check-label"
            htmlFor="conn-status"
            style={
              Object {
                "marginLeft": "0.5em",
                "position": "relative",
                "top": "-0.38em",
              }
            }
          >
            Use Connector instead of direct addressing
          </label>
        </div>
      </div>
      <div
        className="row"
      >
        <div
          className="col-auto"
        >
          <div
            className="mb-3 form-group"
          >
            <label
              className="form-label"
              htmlFor="ipaddress"
            >
              Address
            </label>
            <input
              className="form-control form-control-sm"
              id="ipaddress"
              onChange={[Function]}
              pattern="^[a-zA-Z0-9._]+$"
              placeholder="DB IP address or host name"
              required={true}
              type="text"
              value=""
            />
            <div
              className="valid-feedback"
            >
              Looks good!
            </div>
            <div
              className="invalid-feedback"
            >
              Ender DB address for Dymium
            </div>
          </div>
        </div>
        <div
          className="col-auto"
        >
          <div
            className="mb-3 form-group"
          >
            <label
              className="form-label"
              htmlFor="portnumber"
            >
              Port
            </label>
            <input
              className="form-control form-control-sm"
              id="portnumber"
              onChange={[Function]}
              pattern=".+"
              placeholder="DB port number"
              required={true}
              type="number"
              value=""
            />
            <div
              className="valid-feedback"
            >
              Looks good!
            </div>
            <div
              className="invalid-feedback"
            >
              Select DB port for Dymium
            </div>
          </div>
        </div>
        <div
          className="col-auto"
          style={
            Object {
              "alignItems": "bottom",
              "display": "flex",
            }
          }
        >
          <div
            style={
              Object {
                "marginTop": "1.8em",
              }
            }
          >
            <div
              className="react-toggle yellowtoggle"
              onClick={[Function]}
              onTouchEnd={[Function]}
              onTouchMove={[Function]}
              onTouchStart={[Function]}
            >
              <div
                className="react-toggle-track"
              >
                <div
                  className="react-toggle-track-check"
                >
                  <svg
                    height="11"
                    viewBox="0 0 14 11"
                    width="14"
                  >
                    <path
                      d="M11.264 0L5.26 6.004 2.103 2.847 0 4.95l5.26 5.26 8.108-8.107L11.264 0"
                      fill="#fff"
                      fillRule="evenodd"
                    />
                  </svg>
                </div>
                <div
                  className="react-toggle-track-x"
                >
                  <svg
                    height="10"
                    viewBox="0 0 10 10"
                    width="10"
                  >
                    <path
                      d="M9.9 2.12L7.78 0 4.95 2.828 2.12 0 0 2.12l2.83 2.83L0 7.776 2.123 9.9 4.95 7.07 7.78 9.9 9.9 7.776 7.072 4.95 9.9 2.12"
                      fill="#fff"
                      fillRule="evenodd"
                    />
                  </svg>
                </div>
              </div>
              <div
                className="react-toggle-thumb"
              />
              <input
                checked={false}
                className="react-toggle-screenreader-only"
                id="tls-status"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                type="checkbox"
              />
            </div>
            <label
              className="form-check-label"
              htmlFor="tls-status"
              style={
                Object {
                  "marginLeft": "0.5em",
                  "position": "relative",
                  "top": "-0.38em",
                }
              }
            >
              Use TLS
            </label>
          </div>
        </div>
      </div>
      <div
        className="row"
      >
        <div
          className="col-auto"
        >
          <div
            className="mb-3 form-group"
          >
            <label
              className="form-label"
              htmlFor="dbusername"
            >
              Username
            </label>
            <input
              className="form-control form-control-sm"
              id="dbusername"
              onChange={[Function]}
              pattern=".+"
              placeholder="DB username"
              required={true}
              type="text"
              value=""
            />
            <div
              className="valid-feedback"
            >
              Looks good!
            </div>
            <div
              className="invalid-feedback"
            >
              Admin name for DB
            </div>
          </div>
        </div>
        <div
          className="col-auto"
        >
          <div
            className="mb-3 form-group"
          >
            <label
              className="form-label"
              htmlFor="dbpassword"
            >
              Password
            </label>
            <div
              className="w-12em input-group"
            >
              <input
                className="no-background form-control form-control-sm"
                id="dbpassword"
                onChange={[Function]}
                pattern=".+"
                placeholder="DB password"
                required={true}
                style={
                  Object {
                    "display": "inline",
                    "width": "100%",
                  }
                }
                type="password"
                value=""
              />
              <i
                className="blue fa fa-eye  fa-fw"
                onClick={[Function]}
                style={
                  Object {
                    "marginLeft": "-25px",
                    "marginTop": "6px",
                    "zIndex": "1000",
                  }
                }
              />
              <div
                className="valid-feedback"
              >
                Looks good!
              </div>
              <div
                className="invalid-feedback"
                style={
                  Object {
                    "width": "12em",
                  }
                }
              >
                Admin password
              </div>
            </div>
          </div>
        </div>
      </div>
      <div
        className="row"
      >
        <div
          className="col"
        >
          <div
            className="mb-3 form-group"
          >
            <label
              className="form-label"
              htmlFor="description"
            >
              Description
            </label>
            <textarea
              className="form-control"
              id="description"
              onChange={[Function]}
              placeholder="Please put in the description of this connection"
              required={true}
              rows={3}
              style={
                Object {
                  "width": "100%",
                }
              }
              value=""
            />
            <div
              className="valid-feedback"
            >
              Looks good!
            </div>
            <div
              className="invalid-feedback"
            >
              Please put in some description
            </div>
          </div>
        </div>
      </div>
      <button
        className="mt-4 btn btn-dymium btn-sm"
        disabled={false}
        type="submit"
      >
        Apply
      </button>
    </form>
  </div>
</div>
`;
